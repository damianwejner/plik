<?php 
 /**
    Zachowujemy  nazewnictwo jak w projekcie w tym przypadku "menedzer"
    poniewarz drupal musi rozpoznać elementy składowe projektu.
    Zmienne oznaczamy np. $zmienna .
    Serwer jest "postawiony" na prywatnym komputerze.
     */


function menedzerosobisty_menu(){
/*
 * menedzerosobisty_menu() jest to tak zwane hook_menu() które jest podstawą naszego
 * modułu , to tu ustalamy wywoływanie początkowych funkcji i ustawień.
 */
    $elementy['user/%/menedzerosobisty'] = 
    array(
        'access arguments' => array('widok',1),// zwraca argumenty które są używane do nadawania dostępu
        'access callback' => 'menedzerosobisty_access',//"access callback" = zwraca elementy "TRUE"
        'type' => MENU_LOCAL_TASK, //dzięki temu możemy zobaczyć w Koncie Użytkownika
        'title' => 'Moj Menedzer Osobisty',//"title" - nazwa która jest wyswietlana w zakładce Moje konto ('My account')
        'page arguments' => array(1),// Argumenty strony.
        'page callback' => '_menedzerosobisty_list',//"page callback" - określa nazwę funkcji z której skorzystamy ,która zostanie zwrócona w postaci return.
        );
    
    $elementy['menedzerosobisty/new'] = 
    array(
        'access arguments' => array('access menedzera'),//zwraca argumenty które są używane do nadawania dostępu
        'access callback' => 'user_access',//zwraca dostep użytkownika
        'page arguments' => array('menedzerosobisty_create'),//Funkcja tworząca nowe wpisy
        'page callback' => 'drupal_get_form',//Funkcja do wywołania programów drupala aby złożyc form_execute_handlers ()
        'title' => 'Stworz wpis',//Napis na stronie http://localhost/amatorskiemodelki/menedzerosobisty/new 
        );
    
    $elementy['menedzerosobisty/%menedzerosobisty/edit'] = 
    array(
        'access arguments' => array('aktualizuj',1),// Argument dostępu który jest używany w function menedzerosobisty_access
        'access callback' => 'menedzerosobisty_access',//Zwraca funkcje dostępu.
        'page arguments' => array('menedzerosobisty_edit',1),//Funkcja edytująca wpisy , aktualizująca wpis w bazie danych
        'page callback' => 'drupal_get_form',//Funkcja do wywołania programów drupala aby złożyc form_execute_handlers ()
        'title' => 'Edytuj Menedzer Osobisty',//Napis na stronie http://localhost/amatorskiemodelki/menedzerosobisty/10/edit
        );
    
    $elementy['menedzerosobisty/%menedzerosobisty/delete'] = 
    array(
    'access arguments' => array('usun', 1),// Argument dostępu który jest używany w function menedzerosobisty_access
    'access callback' => 'menedzerosobisty_access',//Zwraca funkcje dostępu.
    'page arguments' => array('menedzerosobisty_delete', 1),//Funkcja usuwająca wpis w bazie danych.
    'page callback' => 'drupal_get_form',//Funkcja do wywołania programów drupala aby złożyc form_execute_handlers ()
    'title' => 'Usuń wpis',//Napis na stronie http://localhost/amatorskiemodelki/menedzerosobisty/10/delete
         );
    return $elementy;//"elementy" są to elementy składowe tablicy array która służy do zarządznia zakładkami
}

function _menedzerosobisty_list($uid){

    /**
     * ====================INFORMACJA==============================
     * '#theme' oznacza motyw którego używamy
     * '#type' tu oznacza w jak jest sortowana lista
     * '#title' napis wyświetlony
     * '#items' oznacza elementy które wystepują lub funkcja
     * ============================================================
    */
    return array(
        '#title' => t('Moje osobiste wpisy:'),// Napis nad tabelką
        '#items' => _menedzerosobisty_pobiera_wpisy($uid),//użycie funkcji która wyswietli nam elementy z bazy danych
        //zostaje pobrany motyw z funkcji  menedzerosobisty_theme()
        '#theme' => 'menedzerosobisty_list',// Motyw użyty w pracy jest on w funkcji menedzerosobisty_theme().
    );
    
}
function menedzerosobisty_access($sprawdz , $menedzer_osobisty_sprawdz_uzytkownika){
    /*
Funkcja zabezpieczjąca przed przeglądaniem naszych zadań przez innych użytkowników zalogowanych
Tam są nasze osobiste notatki
W skrócie Administrator odrazu może wszystko przeglądac, lecz zarejestrowani użytkownicy przeględają
tylko swoje notatki.
     */
  global $user;// Zmienna globalna
  if( user_access('access menedzera')=== FALSE){
      /*
       Zmienna access menedzera mówi czy któś ma dostęp.
       Jeżeli nie to wyskakuje błąd.
       */
    return FALSE;
}
if(user_access('administer content')) {
    /*
     Administrator ma prawo ingerencji na każdym koncie . Funkcja się kończy i zezwala na administrowanie wszystkim.
     */
    return TRUE;
} 
if($sprawdz == 'widok') {
    /*
    Odwołanie do menedzerosobisty_menu() jeżeli jest argument widok to zezwala
    użytkować tylko swoje wpisy i tylko swój widok użytkownikowi.
     */
    
    return $menedzer_osobisty_sprawdz_uzytkownika == $user->uid;
  }
  if($sprawdz == 'aktualizuj' || $sprawdz == 'usun') {
    /*
     Odwołanie do menedzerosobisty_menu() . Można edytować i usuwać tylko swoje wpisy 
     Nie mozna ingerować w innych użytkowników. Administrator jest wyjatkiem. Patrz wyżej if(user_access('administer content')).
     */
  return  $menedzer_osobisty_sprawdz_uzytkownika->uid == $user->uid;
     
  }
 
}

function menedzerosobisty_load($id) {
 /**
 * Funkcja pozwala nam załadować odpowiedni wpis który bedziemy edytować badź 
 * usuwać . Wszystkie wpisy są ponumerowane.
 * Włącza się np gdy załadujemy link 'menedzerosobisty/%menedzerosobisty/edit'
 * lub 'menedzerosobisty/%menedzerosobisty/delete'
 */
  return db_select('menedzerosobisty')//Zaznaczenie w bazie danych.
          ->fields('menedzerosobisty')
          ->condition('id', $id)//Numer wpisu w bazie danych
          ->execute()
          ->fetch();
}

function _menedzerosobisty_pobiera_wpisy($uid)
{
    /*
    Funkcja odpowiadająca za pobranie i zwrócenie wyników z bazy danych.
    db_select to funkcja do zapytań SQL
    funkcja fetch pobiera dane które nas interesują aby się wyświetlały.
    */
    return db_select('menedzerosobisty')// Zaznaczenie elementów
    ->fields('menedzerosobisty',array('id','title'))//Numer wpisu i napis
    ->condition('uid',$uid)//Numer użytkownika
    ->execute()
    ->fetchAll();//Wypisz wszytko
  
}

function menedzerosobisty_permission(){
/**
Funcja nadająca uprawnienia. Mówiąc prościej komu pozwalamy oglądać menedzera osobistego.
Należy pamiętać że trzeba w zakłacce People/permissions nadajemy uprawnienia autentycznemu
użytkownikowi i administratorowi i właśnie po to jest stworzona ta funkcja.
 */
    return array(
    'access menedzera' => //zmienna używana do nadawania dostępu , w tym przypadku admin i użytkownicy zalogowani
    array(
          
          'description' => t('Tworzenie , edytowanie i przeglądanie wpisow w Menedzerze Osobistym'),// Opis 
          'title' => t('Access menedzera'), //Pole w kokpicie administratora które służy do nadawania dostępu (People -> Permissions -> (Trzeba poszukać Access Menedzera))
      ),
    );
}

function menedzerosobisty_theme(){
    /*
     Funkcja tworząca główny motyw , wygląd. 
     */
    return array(
    'menedzerosobisty_list' => array( 
        'template' => 'menedzerosobisty-list',// Wywołanie szablonu który nazywa sie menedzerosobisty-list.tpl i znajduje się w projekcie.
        'variables' => array('items'=>array(),'title' => NULL),// Zmienna których używamy w szablonie menedzerosobisty-list.tpl
       
        
    ),
  );
}



function menedzerosobisty_create($form , &$form_state){
    /*
  Nazwa funkcji menedzerosobisty_create ma znaczenie 
  Drupal wie że tworzymy nowa rzecz
     */
    drupal_set_message(t('Tworzysz nowy wpis'));
    $form['title'] = 
    array(//Zmienna tworzy stronę 
      '#type' =>  'textfield', // Typ pole tekstowe
      '#required' => TRUE,//required zabezpieczenie przed pustym polem
      '#title' => t('Twoj Wpis: '),// Napis Pod nim można wpisać swoje zadanie
    );
    $form['zatwierdz'] = 
    array(//Tworzenie przycisku
        '#value' => t('Stworz nowe'),// Wartość Stwórz nowe   
        '#type' => 'submit',// Typ Zatwierdź
             
     );
return $form;
}


function menedzerosobisty_create_submit(&$form , &$form_state){
    /*
   Nazwa funkcji menedzerosobisty_create_submit ma znaczenie 
   drupal wie że tworzymy nowa rzecz i ją dodajemy do bazy danych.
     */
    drupal_set_message(t('Udana akcja stworzenia wpisu'));
    global $user;
    
    $title = $form_state['values']['title'];//Pobierana jest wartosc i umieszczana w zmiennej title
    //Należy pamietać że title i created to są nazwy kolumn które są wypełniane
    //title jest umieszczany w kolumnie title a 
    // czas jest ustawiany przez REQUEST_TIME
    db_insert('menedzerosobisty')//Dodawanie do bazy danych.
    ->fields(array('title','created','uid'), // Kolumna z napisami , czasem stworzenia i ,numerem użytkownika
      array($title,REQUEST_TIME,$user->uid))//Dodanie elementów
    ->execute();
    //Przejście z powrotem do poczatkowego okienka menedzera osobistego $form_state['redirect']
    // w tym przypadku musi się odwołać do konkretnego linku do naszego konta.
    //zmienna $user przechowuje index aktualnego użytkownika i ustawia w przegladarce odpowiedni numer konta.
   $form_state['redirect'] = "user/$user->uid/menedzerosobisty";
}

function menedzerosobisty_delete($form, &$form_state, $menedzerosobisty) {
    /*
     Funkcja która inicjuje usunięcie naszego wpisu.
     */
  drupal_set_message(t('Usuwanie'));
  $form['message'] = //zmienna tworząca wiadomość do użytkownika
   array(
      '#markup' => t('Czy na pewno chcesz usunac : %menedzerosobisty ???' , array('%menedzerosobisty' => $menedzerosobisty->title)), //Napis informacyjny. 
      '#type' => 'markup',   
  );
  $form['menedzerosobisty_id'] = 
   array(//Szukanie odpowiednego wpisu
    '#default_value' => $menedzerosobisty->id,//Jest pobierana odpowiednia pozycja z bazy danych którą chcemy usunąć.
     //następnie function menedzerosobisty_load($id) załaduje odpowiednie id wpisu.
    '#type' => 'value',// Typ wartość
    
  );

  $form['submit'] = 
  array(//Tworzenia przycisku który który uruchamia funkcję menedzerosobisty_delete_confirmed
    '#submit' => array('menedzerosobisty_delete_confirmed'),// Wywołanie funkcji
    '#type' => 'submit',//Typ Zatwierdź
    '#value' => t('Usuń'),//Wartość 
  );
  $form['cancel'] = array(//Przycisk powrotu. 
    '#value' => t('Powrót'),
    '#type' => 'submit',  
  );
  return $form;
}

function menedzerosobisty_delete_submit(&$form, &$form_state) {
    /*
     Funkcja powrotu do głównego okienka z naszymi wpisami.
     */
  global $user;
  $form_state['redirect'] = "user/$user->uid/menedzerosobisty";
}

function menedzerosobisty_delete_confirmed(&$form, &$form_state) {
    /*
      Funkcja ma na celu trwałe usunięcie z bazy danych naszego wpisu 
      Jeżeli $zmiennausuwajaca jest na 
     */
  $id = $form_state['values']['menedzerosobisty_id'];// Przypisanie odpowiedniego numeru id wpisu do zmiennej.
  $zmiennausuwajaca = db_delete('menedzerosobisty')//Usuwanie z bazy danych
          ->condition('id', $id) // Numer wpisu Id w bazie danych.
          ->execute();// Zmienna $zmiennausuwajaca umożliwia usuniecie z bazy danych naszego wpisu.
  if($zmiennausuwajaca === 1) {
    drupal_set_message(t('wpis usunięty'));
  } else {
    drupal_set_message(t('Nieudane usuniecie wpisu'), 'błąd');
  }
   //Jeżeli $zmiennausuwajaca ma 0 , to pomija if i else, a potem cofa do naszego głównego okienka menedzera osobistego
  //nie trzeba robić cancel
   
  menedzerosobisty_delete_submit($form, $form_state);
}

function menedzerosobisty_edit($form , &$form_state, $menedzerosobisty){
   /*
    Funkcja Edytująca nasze wpisy
    */
   $form['message'] = //zmienna tworząca wiadomość do użytkownika
   array(
      '#markup' => t('Edytujesz : %menedzerosobisty ???' , array('%menedzerosobisty' => $menedzerosobisty->title)), //Napis informacyjny.
      '#type' => 'markup',
  );
    $form['menedzerosobisty_id'] = 
    array(//Szukanie odpowiedniego wpisu
        '#default_value' => $menedzerosobisty->id,//Jest pobierana odpowiednia pozycja z bazy danych którą edytujemy.
        //potem function menedzerosobisty_load($id) załaduje odpowiednie id wpisu.
        '#type' => 'value',// typ wartość
       
    );
    $form['title'] = 
    array(//Wyswietlenie starego wpisu i edytowanie go
      '#default_value' => $menedzerosobisty->title,//Domyślna wartość jest pobierana w tym przypadku jest to napis z bazy danych opatrzony odpowiednim id. Ten napis wyświetla sie do edycji.
      '#required' => TRUE,//required zabezpieczenie przed pustym polem
      '#type' =>  'textfield',//typ pole tekstowe
      '#title' => t('Edycja wpisu: '),//Napis i pole
    );
    
    $form['zatwierdz'] = 
    array(// Tworzenie Przycisku
        '#value' => t('Zapisz'),  // Wartość 
        '#type' => 'submit',// Typ Zatwierdź         
    );
return $form;
}


function menedzerosobisty_edit_submit(&$form , &$form_state){
    /*
  Nazwa funkcji menedzerosobisty_create_submit ma znaczenie 
  drupal wie że tworzymy nowa rzecz i ją dodajemy do bazy danych.
     */
    global $user;
    $id = $form_state['values']['menedzerosobisty_id'];//Pobierana jest wartosc i umieszczana w zmiennej $title
    
    $title = $form_state['values']['title'];//Pobierana jest wartość napisu który jest do edycji
    /*
    Należy pamietać że title i created to są nazwy kolumn które są wypełniane
    title jest umieszczany w kolumnie title a 
    czas jest ustawiany przez REQUEST_TIME
     */
   db_update('menedzerosobisty') // Aktualizowanie bazy danych
    ->fields(array('title' => $title))//Kolumna z napisami
    ->condition('id', $id)//Kolumna z Id wpisu
    ->execute();
    //Przejście z powrotem do poczatkowego okienka menedzera osobistego $form_state['redirect']
    // w tym przypadku musi się odwołać do konkretnego linku do naszego konta.
    //zmienna $user przechowuje index aktualnego użytkownika i ustawia w przegladarce odpowiedni numer konta.
   $form_state['redirect'] = "user/$user->uid/menedzerosobisty";
}







